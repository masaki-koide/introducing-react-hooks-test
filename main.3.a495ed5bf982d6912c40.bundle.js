(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{14:function(e,t,n){n(15),n(40),e.exports=n(37)},34:function(e,t,n){var r={"./0-title.md":35,"./01-contents.mdx":41,"./02-end.md":36};function a(e){var t=c(e);return n(t)}function c(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=c,e.exports=a,a.id=34},35:function(e,t,n){"use strict";n.r(t),n.d(t,"slides",function(){return o}),n.d(t,"fusumaProps",function(){return s}),n.d(t,"default",function(){return p});var r=n(2),a=n.n(r),c=n(1);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=[function(e){return Object(c.a)(a.a.Fragment,null,Object(c.a)("h1",null,"React Hooksのテストを書いてみよう"),Object(c.a)("br",null),Object(c.a)("p",null,"Meguro.es #22",Object(c.a)("br",null),"\n08/08"))}],s=[{classes:"title"}],i={slides:o},b="wrapper";function p(e){var t=e.components,n=u(e,["components"]);return Object(c.a)(b,l({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.a)("h1",null,"React Hooksのテストを書いてみよう"),Object(c.a)("br",null),Object(c.a)("p",null,"Meguro.es #22",Object(c.a)("br",null),"\n08/08"))}p.isMDXComponent=!0},36:function(e,t,n){"use strict";n.r(t),n.d(t,"slides",function(){return o}),n.d(t,"fusumaProps",function(){return s}),n.d(t,"default",function(){return p});var r=n(2),a=n.n(r),c=n(1);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=[function(e){return Object(c.a)(a.a.Fragment,null,Object(c.a)("h1",null,"ご清聴ありがとうございました！"),Object(c.a)("br",null),Object(c.a)("p",null,"(副業募集中...ReactとTypeScriptチョットカケマス...)"))}],s=[{}],i={slides:o},b="wrapper";function p(e){var t=e.components,n=u(e,["components"]);return Object(c.a)(b,l({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.a)("h1",null,"ご清聴ありがとうございました！"),Object(c.a)("br",null),Object(c.a)("p",null,"(副業募集中...ReactとTypeScriptチョットカケマス...)"))}p.isMDXComponent=!0},38:function(e,t,n){var r=n(39);"string"==typeof r&&(r=[[e.i,r,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n(4)(r,a);r.locals&&(e.exports=r.locals)},39:function(e,t,n){},41:function(e,t,n){"use strict";n.r(t);var r=n(2),a=n.n(r),c=n(12),l=function(){return a.a.createElement(c.a,{left:a.a.createElement("img",{src:"https://pbs.twimg.com/profile_images/979597254188126208/Kw_5K41V_400x400.jpg"}),right:a.a.createElement("ul",{class:"description"},a.a.createElement("li",null,"名前: markey, ",a.a.createElement("a",{href:"https://twitter.com/markey_koichan"},"markey_koichan(Twitter)")),a.a.createElement("li",null,"職業: フロントエンドエンジニア"),a.a.createElement("li",null,"スキル: React/Vue/TypeScript"),a.a.createElement("li",null,"趣味: 日本語ラップ、MCバトル鑑賞"))})},u=n(1);function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"slides",function(){return i}),n.d(t,"fusumaProps",function(){return b}),n.d(t,"default",function(){return j});var i=[function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"自己紹介"),Object(u.a)(l,{mdxType:"SelfIntroduce"}),Object(u.a)("p",null,"人生初LT、お手柔らかに🙏"))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"テスト、書いてますか？"))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"React Hooksのテスト、書いてますか？"))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"React Hooks誕生後の世界"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Function Component"),Object(u.a)("li",null,"ビジネスロジック→Custom Hook")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"こんないいことが"),Object(u.a)("br",null),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},"UIとロジックが分離され、テスタブルなコードに"),Object(u.a)("li",{parentName:"ul"},"ビジネスロジックをCustom Hookに集約する(APIからのデータ取得・加工、状態、ハンドラー)"),Object(u.a)("li",{parentName:"ul"},"UIコンポーネントの開発は受け取るPropsの定義と、それらを元にした表示のみ"),Object(u.a)("li",{parentName:"ul"},"UIコンポーネント開発者はロジック部分やAPIの仕様などを一切知る必要がない"),Object(u.a)("li",{parentName:"ul"},"複数の開発者が同一ページのUIとロジックを並行開発することが可能")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"今こそ、テストをやるチャンス🎉"))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"それぞれのテスト"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Storybook + reg-suit"),Object(u.a)("li",null,"ビジネスロジック→@testing-library/react-hooks")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"今日話すのはここ"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Storybook + reg-suit"),Object(u.a)("li",{className:"bg-primary"},"ビジネスロジック→@testing-library/react-hooks")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"@testing-library/react-hooks"),Object(u.a)("br",null),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},Object(u.a)("a",s({parentName:"li"},{href:"https://react-hooks-testing-library.com/"}),"公式ドキュメント")),Object(u.a)("li",{parentName:"ul"},"React Hooksのテストユーティリティライブラリ"),Object(u.a)("li",{parentName:"ul"},"hookをシンプルな関数のように実行でき(ラッパーコンポーネントは不要)、",Object(u.a)("br",null),"hookの更新も容易"),Object(u.a)("li",{parentName:"ul"},Object(u.a)("a",s({parentName:"li"},{href:"https://github.com/testing-library/react-hooks-testing-library/blob/master/src/index.js"}),"メインのファイル"),"はわずか93行")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"パッケージの追加"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-shell"}),"yarn add --dev @testing-library/react-hooks\n\n# もしくは\nnpm install --save-dev @testing-library/react-hooks\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("p",null,"@testing-library/react-hooksを使ったシンプルなテスト"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { useState, useCallback } from 'React'\n\nexport default function useCounter() {\n  const [count, setCount] = useState(0)\n  const increment = useCallback(() => setCount((x) => x + 1), [])\n  return { count, increment }\n}\n")),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { renderHook } from '@testing-library/react-hooks'\nimport useCounter from '.'\n\ntest('should use counter', () => {\n  // hookを実行\n  const { result } = renderHook(() => useCounter())\n\n  // resut.currentからhookの返り値を取得\n  expect(result.current.count).toBe(0)\n  expect(typeof result.current.increment).toBe('function')\n})\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("p",null,"ブラウザ上でのhookの動作をシミュレートして、",Object(u.a)("br",null),"値を更新するには？🤔"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"test('should increment counter', () => {\n  const { result } = renderHook(() => useCounter())\n\n  expect(result.current.count).toBe(0)\n\n  // actでラップする\n  act(() => {\n    result.current.increment()\n  })\n\n  expect(result.current.count).toBe(1)\n})\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("p",null,"Contextから値を取得するときはどうする？🤔",Object(u.a)("br",null),"(Redux, Apollo Client, ...)"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"const CounterStepContext = React.createContext(1)\n\nexport const CounterStepProvider = ({ step, children }) => (\n  <CounterStepContext.Provider value={step}>{children}</CounterStepContext.Provider>\n)\n\nexport function useCounter() {\n  const [count, setCount] = useState(0)\n  // incrementする値はContextから取得\n  const step = useContext(CounterStepContext)\n  const increment = useCallback(() => setCount((x) => x + step), [step])\n  return { count, increment }\n}\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { useCounter, CounterStepProvider } from '.'\n\ntest('should use custom step when incrementing', () => {\n  const wrapper = ({ children }) => (\n    <CounterStepProvider step={2}>{children}</CounterStepProvider>\n  )\n  // renderHookの第2引数にwrapperオプションを指定\n  const { result } = renderHook(() => useCounter(), { wrapper })\n\n  expect(result.current.count).toBe(0)\n\n  act(() => {\n    result.current.increment()\n  })\n\n  expect(result.current.count).toBe(2)\n})\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("p",null,"非同期な関数の実行はどうする？🤔"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"export default function useCounter() {\n  const [count, setCount] = useState(0)\n  const increment = useCallback(() => setCount((x) => x + 1), [])\n  // 0.1秒後に非同期にincrementする\n  const incrementAsync = useCallback(() => setTimeout(increment, 100), [increment])\n  return { count, increment, incrementAsync }\n}\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"test('should increment counter after delay', async () => {\n  const { result, waitForNextUpdate } = renderHook(() => useCounter())\n\n  result.current.incrementAsync()\n\n  // 実行直後はまだincrementされていない\n  expect(result.current.count).toBe(0)\n\n  // Promiseがresolveされるまで待つ\n  await waitForNextUpdate()\n\n  expect(result.current.count).toBe(1)\n})\n")))},function(e){return Object(u.a)(a.a.Fragment,null,Object(u.a)("h1",null,"@testing-library/react-hooksで",Object(u.a)("br",null),"快適なテストライフを👍"))}],b=[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],p={slides:i},O="wrapper";function j(e){var t=e.components,n=o(e,["components"]);return Object(u.a)(O,s({},p,n,{components:t,mdxType:"MDXLayout"}),Object(u.a)("h1",null,"自己紹介"),Object(u.a)(l,{mdxType:"SelfIntroduce"}),Object(u.a)("p",null,"人生初LT、お手柔らかに🙏"),Object(u.a)("hr",null),Object(u.a)("h1",null,"テスト、書いてますか？"),Object(u.a)("hr",null),Object(u.a)("h1",null,"React Hooksのテスト、書いてますか？"),Object(u.a)("hr",null),Object(u.a)("h1",null,"React Hooks誕生後の世界"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Function Component"),Object(u.a)("li",null,"ビジネスロジック→Custom Hook")),Object(u.a)("hr",null),Object(u.a)("h1",null,"こんないいことが"),Object(u.a)("br",null),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},"UIとロジックが分離され、テスタブルなコードに"),Object(u.a)("li",{parentName:"ul"},"ビジネスロジックをCustom Hookに集約する(APIからのデータ取得・加工、状態、ハンドラー)"),Object(u.a)("li",{parentName:"ul"},"UIコンポーネントの開発は受け取るPropsの定義と、それらを元にした表示のみ"),Object(u.a)("li",{parentName:"ul"},"UIコンポーネント開発者はロジック部分やAPIの仕様などを一切知る必要がない"),Object(u.a)("li",{parentName:"ul"},"複数の開発者が同一ページのUIとロジックを並行開発することが可能")),Object(u.a)("hr",null),Object(u.a)("h1",null,"今こそ、テストをやるチャンス🎉"),Object(u.a)("hr",null),Object(u.a)("h1",null,"それぞれのテスト"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Storybook + reg-suit"),Object(u.a)("li",null,"ビジネスロジック→@testing-library/react-hooks")),Object(u.a)("hr",null),Object(u.a)("h1",null,"今日話すのはここ"),Object(u.a)("ul",{className:"flexblock activity"},Object(u.a)("li",null,"UIコンポーネント→Storybook + reg-suit"),Object(u.a)("li",{className:"bg-primary"},"ビジネスロジック→@testing-library/react-hooks")),Object(u.a)("hr",null),Object(u.a)("h1",null,"@testing-library/react-hooks"),Object(u.a)("br",null),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},Object(u.a)("a",s({parentName:"li"},{href:"https://react-hooks-testing-library.com/"}),"公式ドキュメント")),Object(u.a)("li",{parentName:"ul"},"React Hooksのテストユーティリティライブラリ"),Object(u.a)("li",{parentName:"ul"},"hookをシンプルな関数のように実行でき(ラッパーコンポーネントは不要)、",Object(u.a)("br",null),"hookの更新も容易"),Object(u.a)("li",{parentName:"ul"},Object(u.a)("a",s({parentName:"li"},{href:"https://github.com/testing-library/react-hooks-testing-library/blob/master/src/index.js"}),"メインのファイル"),"はわずか93行")),Object(u.a)("hr",null),Object(u.a)("h1",null,"パッケージの追加"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-shell"}),"yarn add --dev @testing-library/react-hooks\n\n# もしくは\nnpm install --save-dev @testing-library/react-hooks\n")),Object(u.a)("hr",null),Object(u.a)("p",null,"@testing-library/react-hooksを使ったシンプルなテスト"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { useState, useCallback } from 'React'\n\nexport default function useCounter() {\n  const [count, setCount] = useState(0)\n  const increment = useCallback(() => setCount((x) => x + 1), [])\n  return { count, increment }\n}\n")),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { renderHook } from '@testing-library/react-hooks'\nimport useCounter from '.'\n\ntest('should use counter', () => {\n  // hookを実行\n  const { result } = renderHook(() => useCounter())\n\n  // resut.currentからhookの返り値を取得\n  expect(result.current.count).toBe(0)\n  expect(typeof result.current.increment).toBe('function')\n})\n")),Object(u.a)("hr",null),Object(u.a)("p",null,"ブラウザ上でのhookの動作をシミュレートして、",Object(u.a)("br",null),"値を更新するには？🤔"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"test('should increment counter', () => {\n  const { result } = renderHook(() => useCounter())\n\n  expect(result.current.count).toBe(0)\n\n  // actでラップする\n  act(() => {\n    result.current.increment()\n  })\n\n  expect(result.current.count).toBe(1)\n})\n")),Object(u.a)("hr",null),Object(u.a)("p",null,"Contextから値を取得するときはどうする？🤔",Object(u.a)("br",null),"(Redux, Apollo Client, ...)"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"const CounterStepContext = React.createContext(1)\n\nexport const CounterStepProvider = ({ step, children }) => (\n  <CounterStepContext.Provider value={step}>{children}</CounterStepContext.Provider>\n)\n\nexport function useCounter() {\n  const [count, setCount] = useState(0)\n  // incrementする値はContextから取得\n  const step = useContext(CounterStepContext)\n  const increment = useCallback(() => setCount((x) => x + step), [step])\n  return { count, increment }\n}\n")),Object(u.a)("hr",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"import { useCounter, CounterStepProvider } from '.'\n\ntest('should use custom step when incrementing', () => {\n  const wrapper = ({ children }) => (\n    <CounterStepProvider step={2}>{children}</CounterStepProvider>\n  )\n  // renderHookの第2引数にwrapperオプションを指定\n  const { result } = renderHook(() => useCounter(), { wrapper })\n\n  expect(result.current.count).toBe(0)\n\n  act(() => {\n    result.current.increment()\n  })\n\n  expect(result.current.count).toBe(2)\n})\n")),Object(u.a)("hr",null),Object(u.a)("p",null,"非同期な関数の実行はどうする？🤔"),Object(u.a)("br",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"export default function useCounter() {\n  const [count, setCount] = useState(0)\n  const increment = useCallback(() => setCount((x) => x + 1), [])\n  // 0.1秒後に非同期にincrementする\n  const incrementAsync = useCallback(() => setTimeout(increment, 100), [increment])\n  return { count, increment, incrementAsync }\n}\n")),Object(u.a)("hr",null),Object(u.a)("pre",null,Object(u.a)("code",s({parentName:"pre"},{className:"language-javascript"}),"test('should increment counter after delay', async () => {\n  const { result, waitForNextUpdate } = renderHook(() => useCounter())\n\n  result.current.incrementAsync()\n\n  // 実行直後はまだincrementされていない\n  expect(result.current.count).toBe(0)\n\n  // Promiseがresolveされるまで待つ\n  await waitForNextUpdate()\n\n  expect(result.current.count).toBe(1)\n})\n")),Object(u.a)("hr",null),Object(u.a)("h1",null,"@testing-library/react-hooksで",Object(u.a)("br",null),"快適なテストライフを👍"))}j.isMDXComponent=!0}},[[14,5,6]],[0,8]]);